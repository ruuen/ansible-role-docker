---
- name: Install dependencies
  become: true
  ansible.builtin.apt:
    name:
      - slirp4netns
      - dbus-user-session
      - docker-ce-rootless-extras
      - uidmap

- name: Disable root docker daemon
  become: true
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    scope: system
    state: stopped
    enabled: false
  with_items:
    - docker.service
    - docker.socket

- name: Remove root docker socket
  become: true
  ansible.builtin.file:
    path: /var/run/docker.sock
    state: absent

- name: Enable user lingering
  become: true
  ansible.builtin.command:
    cmd: "loginctl enable-linger {{ docker_rootless_user }}"
    creates: /var/lib/systemd/linger/{{ docker_rootless_user }}
  notify: "reset ssh"

- name: Get rootless user uid
  ansible.builtin.command:
    cmd: "id -u {{ docker_rootless_user }}"
  register: rootless_user_uid
  changed_when: false

- name: Run rootless install script
  become: true
  become_user: "{{ docker_rootless_user }}"
  ansible.builtin.shell:
    cmd: "bash -ilc 'dockerd-rootless-setuptool.sh install'"
    creates: /run/user/{{ rootless_user_uid.stdout }}/docker.sock
  environment:
    XDG_RUNTIME_DIR: /run/user/{{ rootless_user_uid.stdout }}

- name: Enable rootless docker daemon on boot
  ansible.builtin.systemd_service:
    name: docker
    scope: user
    state: started
    enabled: true

- name: Get rootlesskit binary path
  become: true
  become_user: "{{ docker_rootless_user }}"
  ansible.builtin.command:
    cmd: "which rootlesskit"
  when: "docker_rootless_bind_privileged_ports"
  register: rootlesskit_path
  changed_when: false
  failed_when: "rootlesskit_path.rc > 1"

- name: Allow privileged port binding with cap_net_bind_service
  become: true
  community.general.capabilities:
    path: "{{rootlesskit_path.stdout}}"
    capability: cap_net_bind_service=ep
  when: "docker_rootless_bind_privileged_ports and rootlesskit_path.stdout | length > 0"
  notify: "restart docker"

- name: Set docker config folder location
  ansible.builtin.set_fact:
    docker_config_dir: "/home/{{ docker_rootless_user }}/.config/docker"

- name: Create docker config folder if it doesn't exist
  ansible.builtin.file:
    path: "{{ docker_config_dir }}"
    state: directory

